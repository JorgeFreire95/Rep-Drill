events {
    worker_connections 1024;
}

http {
    upstream auth-service {
        server auth-service:8000;
    }
    
    upstream personas-service {
        server personas-service:8000;
    }
    
    upstream inventario-service {
        server inventario-service:8000;
    }
    
    upstream ventas-service {
        server ventas-service:8000;
    }

    # Configuración MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen 80;
        server_name localhost;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Servicio de Autenticación
        location /auth/ {
            proxy_pass http://auth-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Servicio de Personas
        location /personas/ {
            proxy_pass http://personas-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Servicio de Inventario
        location /inventario/ {
            proxy_pass http://inventario-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Servicio de Ventas
        location /ventas/ {
            proxy_pass http://ventas-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Redirigir root a la interfaz de autenticación
        location = / {
            return 302 /auth/interface/;
        }

        # Static files para Auth
        location /auth/static/ {
            alias /app/auth/staticfiles/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Static files para Personas
        location /personas/static/ {
            alias /app/personas/staticfiles/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Static files para Inventario
        location /inventario/static/ {
            alias /app/inventario/staticfiles/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Static files para Ventas
        location /ventas/static/ {
            alias /app/ventas/staticfiles/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Manejo de errores
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            return 404 '{"error": "Not Found", "status": 404}';
            add_header Content-Type application/json;
        }
        
        location = /50x.html {
            return 500 '{"error": "Internal Server Error", "status": 500}';
            add_header Content-Type application/json;
        }
    }
}